(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{409:function(_,v,a){"use strict";a.r(v);var t=a(42),e=Object(t.a)({},(function(){var _=this,v=_.$createElement,a=_._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("h2",{attrs:{id:"_3-14-1js对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-14-1js对象"}},[_._v("#")]),_._v(" 3.14.1js对象")]),_._v(" "),a("p",[_._v("狭义对象：{}添加属性，属性可以访问。")]),_._v(" "),a("p",[_._v("广义对象：window 、 Date 、Math")]),_._v(" "),a("h2",{attrs:{id:"_3-14-2基本数据类型与引用数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-14-2基本数据类型与引用数据类型"}},[_._v("#")]),_._v(" 3.14.2基本数据类型与引用数据类型")]),_._v(" "),a("p",[_._v("基本数据类型 number null undefined string boolean")]),_._v(" "),a("p",[_._v("基本数据类型不能添加属性，不能拿到属性值。")]),_._v(" "),a("h2",{attrs:{id:"_3-14-3json与js狭义对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-14-3json与js狭义对象"}},[_._v("#")]),_._v(" 3.14.3json与js狭义对象")]),_._v(" "),a("p",[_._v("var p1 = {")]),_._v(" "),a("p",[_._v('"name":"along",')]),_._v(" "),a("p",[_._v('"age":31,')]),_._v(" "),a("p",[_._v("}")]),_._v(" "),a("p",[_._v("json的属性必须加双引号,一般狭义对象不加引号的,特殊符号、中午数字开头的需加双引号")]),_._v(" "),a("p",[_._v("var obj = {")]),_._v(" "),a("p",[_._v('"~~":"2019",')]),_._v(" "),a("p",[_._v('"国籍":"china",')]),_._v(" "),a("p",[_._v('"2018":2018')]),_._v(" "),a("p",[_._v("}")]),_._v(" "),a("h2",{attrs:{id:"_3-14-4函数上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-14-4函数上下文"}},[_._v("#")]),_._v(" 3.14.4函数上下文")]),_._v(" "),a("p",[_._v("1.函数假如是圆括号执行 函数的上下文就是window")]),_._v(" "),a("p",[_._v("var a = 100;")]),_._v(" "),a("p",[_._v("function fn(a,b,c,e,d,f) {")]),_._v(" "),a("p",[_._v("var a=100; //this == window")]),_._v(" "),a("p",[_._v("console.log(a); //window.a 访问全局a")]),_._v(" "),a("p",[_._v("}")]),_._v(" "),a("p",[_._v("fn(1,3,5,7,9,11); //相当于window.fn()")]),_._v(" "),a("p",[_._v("2.函数作为事件处理函数，函数上下文就是这个事件触发的对象")]),_._v(" "),a("p",[_._v("3.函数作为对象的方法，对象打点调用 那么函数上下文就是这个对象")]),_._v(" "),a("p",[_._v("4.定时器函数上下文是window")]),_._v(" "),a("p",[_._v("5.函数作为数组元素 被索引出来执行 函数上下文的这个数组")]),_._v(" "),a("p",[_._v("6.回调函数中，函数的上下文是window")]),_._v(" "),a("h2",{attrs:{id:"_3-14-5arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-14-5arguments"}},[_._v("#")]),_._v(" 3.14.5arguments")]),_._v(" "),a("h2",{attrs:{id:"_3-14-6call和apply"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-14-6call和apply"}},[_._v("#")]),_._v(" 3.14.6call和apply")]),_._v(" "),a("p",[_._v("call()也可以调用函数,它的参数除了接受实际参数外,还可以接受一个参数代表。")]),_._v(" "),a("p",[_._v("fn.call(obj,1,2,3,4)")]),_._v(" "),a("p",[_._v("apply()与call基本功能相同，传参语法不同,实参需要[]括起。")]),_._v(" "),a("p",[_._v("fn.apply (obj,[1,2,3,4])")]),_._v(" "),a("h2",{attrs:{id:"_3-14-6计算机语言-程序设计语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-14-6计算机语言-程序设计语言"}},[_._v("#")]),_._v(" 3.14.6计算机语言(程序设计语言)")]),_._v(" "),a("p",[_._v("面向对象js/java/php/c#/python/c++/ruby/...")]),_._v(" "),a("p",[_._v("面向过程  c")]),_._v(" "),a("p",[_._v("面向对象的相关概念")]),_._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[_._v(" 对象  万物皆对象 \n\n 类    对象的具体细分（按功能特点进行分类 大类 小类）\n\n 实例  类中一个具体的事物\n")])])]),a("p",[_._v("js是基于面向对象的一门语言")]),_._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[_._v("内置类\n\n               Object 基类分以下小类                     \n")])])]),a("p",[_._v("一 Number String    Boolean    Null Undefined  Array Date RegExp Function ...")]),_._v(" "),a("p",[_._v("10  0  -1.2 NaN")]),_._v(" "),a("p",[_._v("二HTMLCollection")]),_._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[_._v("   元素集合都是其实例\n")])])]),a("p",[_._v("三EventTarget->子类Node->子类Element->子类HTMLElement->子类HTMLBodyElement->body")]),_._v(" "),a("p",[_._v("自定义类")]),_._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[_._v("  基于基类，创建更多自己的类 一般函数名首字母大写 （构造函数） 可以通过 new.fn调用。\n")])])]),a("h2",{attrs:{id:"_3-14-7构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-14-7构造函数"}},[_._v("#")]),_._v(" 3.14.7构造函数")]),_._v(" "),a("p",[_._v("每一个构造函数都有一个属性prototype属性,该属性指向了一个空对象People.prototype 叫做构造函数的原型")]),_._v(" "),a("p",[_._v("默认不写return,最后会把这个this对象返回，假如我们手写return 返回值是引用类型 则以该引用类型为返回值 其他情况都是返回this这个对象")]),_._v(" "),a("p",[_._v("obj打点调用sayHi方法 首先在obj对象里查找有没有sayHi方法，假如有则执行，没有的话则通过自己的属__proto__找到自己的原型对象，原型对象上有则执行，没有的话继续往自己的原型对象的原型对象上找，以此类推。")]),_._v(" "),a("p",[_._v("prototype")]),_._v(" "),a("p",[_._v("People————————>People.prototype")]),_._v(" "),a("p",[_._v("|                      sayHi()")]),_._v(" "),a("p",[_._v("| new")]),_._v(" "),a("p",[_._v("|                         ^")]),_._v(" "),a("p",[_._v("ldh ----------------------|")]),_._v(" "),a("p",[a("strong",[_._v("proto")])]),_._v(" "),a("p",[_._v("// People.prototype 叫做构造函数的原型")]),_._v(" "),a("p",[_._v("// ldh lh 原型的对象")])])}),[],!1,null,null,null);v.default=e.exports}}]);