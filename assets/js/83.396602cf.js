(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{458:function(t,e,a){"use strict";a.r(e);var s=a(44),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_3-1-http-1-1协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-http-1-1协议"}},[t._v("#")]),t._v(" 3.1 HTTP/1.1协议")]),t._v(" "),a("h3",{attrs:{id:"http协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http协议"}},[t._v("#")]),t._v(" http协议")]),t._v(" "),a("p",[t._v("一种无状态的，应用层的，以请求/应答方式运行的协议。它可以使用可扩展的语义和自描述消息格式。与基于网络的超文本信息系统灵活互动。（RFC723 2014.6）")]),t._v(" "),a("h3",{attrs:{id:"基于abnf语义定义的http消息格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于abnf语义定义的http消息格式"}},[t._v("#")]),t._v(" 基于ABNF语义定义的HTTP消息格式")]),t._v(" "),a("h3",{attrs:{id:"浏览器发起http请求的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器发起http请求的过程"}},[t._v("#")]),t._v(" 浏览器发起http请求的过程")]),t._v(" "),a("p",[a("img",{attrs:{src:"/jaqi.note/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8F%91%E8%B5%B7http%E8%AF%B7%E6%B1%82%E7%9A%84%E8%BF%87%E7%A8%8B.png",alt:"浏览器发起http请求的过程"}})]),t._v(" "),a("h3",{attrs:{id:"osi模型与tcp-ip模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#osi模型与tcp-ip模型"}},[t._v("#")]),t._v(" OSI模型与TCP/IP模型")]),t._v(" "),a("p",[a("img",{attrs:{src:"/jaqi.note/OSI%E6%A8%A1%E5%9E%8B.png",alt:"OSI模型"}})]),t._v(" "),a("h3",{attrs:{id:"web构架的关键属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web构架的关键属性"}},[t._v("#")]),t._v(" web构架的关键属性：")]),t._v(" "),a("p",[t._v("性能、可伸缩性、简单性、可见性、可移植性、可靠性、可修改性。")]),t._v(" "),a("h3",{attrs:{id:"使用chrome的network面板分析http报文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用chrome的network面板分析http报文"}},[t._v("#")]),t._v(" 使用Chrome的Network面板分析HTTP报文")]),t._v(" "),a("h4",{attrs:{id:"network面板构成-控制器、过滤器、概览、请求列表、概要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#network面板构成-控制器、过滤器、概览、请求列表、概要"}},[t._v("#")]),t._v(" Network面板构成：控制器、过滤器、概览、请求列表、概要")]),t._v(" "),a("ol",[a("li",[t._v("控制器：")])]),t._v(" "),a("blockquote",[a("p",[t._v("抓包/停止抓包、清楚请求、跨页面加载请求（Preserve log）、屏幕截图（Capture screenshots）、重新执行XHR请求、停用浏览器缓存(Diaable cache)、手动清理缓存（cache）、手动清理缓存（cookie）、离线模式、模型网速、")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("过滤器：")])]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("根据类型过滤：XHR、JS、Img、Media、Font、Doc、WS(WebSocket)、Mainifest、Other")]),t._v(" "),a("li",[t._v("多类型过滤：Ctrl/Command+单击根据多个类型过滤")]),t._v(" "),a("li",[t._v("按照时间过滤：")]),t._v(" "),a("li",[t._v("过滤BASE64的请求：Data URLs")]),t._v(" "),a("li",[t._v("根据属性过滤filter：domain（指定域）、has-response-header（指定响应头）、is:running（websocker）、is:from-cache(缓存)、larger-than（资源大小）、method（请求类型）、mime-type（MIME资源类型）、status-code（状态码）、set-cookoe-name/domain/value（具有set-cookoe标头的域/名称/值）、scheme(具有https保护的)、mixed-content（显示所有混合内容的资源）")])])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("概览：")]),t._v(" "),a("li",[t._v("请求列表：")])]),t._v(" "),a("blockquote",[a("p",[t._v("请求列表排序：")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("按照活动时间排序Waterfall：Start Time（第一个请求开始的）、Response Time（第一个开始下载的）、End Time（完成的第一个请求）、Total Duration（连接设置时间和请求、相应最快的请求）、Latency（等待最短响应时间的）")]),t._v(" "),a("li",[t._v("请求发起方式Initiator:Parser（html解析器发起的）、Redirect（HTTP重定向发起的）、Script（JS脚步发起的）、Other（用户点击、地址栏输入地址等）")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("预览请求详情:")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("头部Headers:")]),t._v(" "),a("li",[t._v("cookie")]),t._v(" "),a("li",[t._v("预览响应正文Preview")]),t._v(" "),a("li",[t._v("查看响应正文Response")]),t._v(" "),a("li",[t._v("时间详情分布timing:Queueing（请求正在排队）、Stalled（请求被终止）、DNS Lookup（解析地址）、Proxy Negotiation（正在与代理服务器协商请求）、Requst sent（正在发送请求）、ServiceWorker Preparation（浏览器正在启动Service Worker ）、Request to ServiceWorker（浏览器正将请求发送到Service Worker） Waiting（浏览器正在等待响应的第一个字节）、Content Download（浏览器正在接收响应） Receiving Push（浏览器正在通过HTTP/2服务器推送接收此响应的数据）、 Reading Push（浏览器正在读取之前收到的本地数据）")]),t._v(" "),a("li",[t._v("请求的上下游:shift键+鼠标悬停")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("查看请求的上下游:shift+鼠标悬停，红色下游、绿色上游")])]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("概要：请求总数，总数据量，DOM加载时间，总加载时间：")])]),t._v(" "),a("h3",{attrs:{id:"uri基本格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uri基本格式"}},[t._v("#")]),t._v(" URI基本格式")]),t._v(" "),a("p",[t._v("URL统一资源定位符，URI统一资源标识符，URN统一资源名称。\nURI的组成：scheme-user-informantion-host-port+query-fragment\n为什么要进行URI编码：避免数据编码歧义。")]),t._v(" "),a("h3",{attrs:{id:"http请求行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http请求行"}},[t._v("#")]),t._v(" HTTP请求行")]),t._v(" "),a("p",[t._v("HTTP版本：0.9（只支持get方法）、1.0 （常用代理服务器例如nginx默认配置）1.1（1999年发布）、2.0(2015年发布)\nHTTP常见方法：")]),t._v(" "),a("blockquote",[a("p",[t._v("GET：主要的获取信息方法，幂等方法、\n HEAD：类似于GET，但服务器不发送body，用以获取HEAD元数据，幂等方法\n POST：常用于表单，和新增资源。\n PUT：常用于更新资源，带条件时是幂等方法。\n DELETE：删除资源，幂等方法。\n CONNECT：建立tunnel隧道\n OPTIONS：显示服务器对访问资源支持的方法，幂等方法。\n TRACE：回显服务器收到的请求，用于定位问题。有延期风险。（nginx不支持）\n:::tips\n幂等方法：调用一次和调用多次结果一致。\n:::")])]),t._v(" "),a("h3",{attrs:{id:"http响应行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http响应行"}},[t._v("#")]),t._v(" HTTP响应行")]),t._v(" "),a("p",[t._v("HTTP响应码：")]),t._v(" "),a("blockquote",[a("p",[t._v("* 1xx：请求已收到，需要进一步处理")]),t._v(" "),a("blockquote",[a("p",[t._v("100：上传大文件前使用\n 101：协议升级使用\n 102：用于WebDAV请求、服务器已收到，需要很长一段时间完成。")])])]),t._v(" "),a("blockquote",[a("p",[t._v("* 2xx：成功处理的请求")]),t._v(" "),a("blockquote",[a("p",[t._v("200：成功返回响应\n 201：有新资源在服务器端被创建\n 202：服务器接收并开始处理请求，单请求未处理完成。\n 203：告诉客户端代理服务器修改了原服务器的数据。\n 204：成功的执行了请求，但不响应包体。暗示客户端无需更新视图。\n 205：成功的执行了请求，但不响应包体。提示客户端需要更新视图。\n 206：range协议时返回部分响应内容时的响应码。\n 207：WebDev协议中以XML返回多个资源的状态。\n 208：WebDev协议中父集合的响应码")])])]),t._v(" "),a("blockquote",[a("p",[t._v("* 3xx：重定向,次数不超过5次")]),t._v(" "),a("blockquote",[a("p",[t._v("300：告诉客户端自行选择访问方式\n 301：永久重定向\n 302：临时重定向\n 303：重定向到其他资源\n 304：缓存过期\n 307：\n 308：")])])]),t._v(" "),a("blockquote",[a("p",[t._v("* 4xx：客户端出现错误")]),t._v(" "),a("blockquote",[a("p",[t._v("400：服务端认为客户端出现了错误，且不属于以下错误类型。。\n 401：用户认证信息不正确或缺失。\n 407：对需要经由代理的请求，认证信息未通过代理服务器。\n 403：没有权限\n 404：没有找到对应资源\n 410：没有找到对应资源，且知道资源永久性的找不到。\n 405：服务器不支持改请求方法。\n 406：对客户端指定的资源表述不存在。\n 408：服务器接收请求超时。\n 409：资源冲突。\n 411：请求中有包体，未携带Content-length头部，且不属于chunk类请求。\n 412：条件类请求，不满足时\n 413：包体超出最大长度\n 414：请求的URI超长\n 415：上传的文件类型不被服务器支持\n 416：无法提供range请求中指定的那段包体\n 417：对Expect请求头部期待的情况无法满足时的相应码\n 421：服务器认为请求不应该发给它\n 426：服务器拒绝基于http协议提供服务\n 428：用户请求中缺失了条件类头部\n 429：发送请求速率过快\n 431：请求的header头部大小超过限制\n 451：由于法律渊源资源不可以访问")])])]),t._v(" "),a("blockquote",[a("p",[t._v("* 5xx：服务端出现错误")]),t._v(" "),a("blockquote",[a("p",[t._v("500：服务器内部出现错误，且不属于以下错误类型。\n 501：不支持实现请求所需要的功能。\n 502：代理服务器无法获取到合法请求。\n 503：服务器资源尚未准备好处理当前请求。\n 504：代理服务器无法及时的从上游获取相应。\n 505：请求使用的http协议版本不支持。\n 507：服务器没有足够的空间处理请求。\n 508：访问资源时检测到循环\n 511：代理服务器发现客户端需要进行身份验证才能获得网络访问权限。")])])]),t._v(" "),a("h3",{attrs:{id:"会话跟踪技术cookie与session"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#会话跟踪技术cookie与session"}},[t._v("#")]),t._v(" 会话跟踪技术Cookie与Session")]),t._v(" "),a("h4",{attrs:{id:"会话跟踪技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#会话跟踪技术"}},[t._v("#")]),t._v(" 会话跟踪技术：")]),t._v(" "),a("p",[t._v("会话：从打开页面到关闭页面。\n跟踪：客户端与服务器多次请求数据，时进行数据共享。")]),t._v(" "),a("h4",{attrs:{id:"cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" Cookie")]),t._v(" "),a("p",[t._v("通过检查客服端上的“通行证”来确认客户身份。")]),t._v(" "),a("p",[t._v("Cookie的签发流程：客户端首次请求服务器，服务端返回一个Cookie通行证，当客户端携带Cookie通行证并再一次发送请求时，服务端检查Cookie来确认客户身份。")]),t._v(" "),a("h4",{attrs:{id:"session"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[t._v("#")]),t._v(" Session")]),t._v(" "),a("p",[t._v("通过检查服务端上的“客户表”来确认客户身份。\nSession的签发流程：客户端首次请求服务器，服务端会生成一个客户记录，当客户端再一次发送请求时，服务端检查当前客户是否在客户表中，来确认客户身份。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Cookie和Session的区别")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("存储位置：Cookie存在客户端，Session存在服务端。")])]),t._v(" "),a("li",[a("p",[t._v("存储容量：Cookie最大4KB且一个域名最多20个，Session没有上限。")])]),t._v(" "),a("li",[a("p",[t._v("存储方式：Cookie中只能保管ASCII字符串，并需要通过编码方式存储为Unicode字符或者二进制数据。Session能存储任何类型的数据。")])]),t._v(" "),a("li",[a("p",[t._v("隐私策略：Cookie对客户端是可见的，因此不安全。")])]),t._v(" "),a("li",[a("p",[t._v("效期：Cookie可以长期有效，Session关闭窗口即失效。")])]),t._v(" "),a("li",[a("p",[t._v("浏览器：Cookie依赖浏览器的支持。")])]),t._v(" "),a("li",[a("p",[t._v("跨域：Cookie支持跨域名访问（但是不能跨域操作），session不支持跨域名")])])])]),t._v(" "),a("h2",{attrs:{id:"_3-2-websocket协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-websocket协议"}},[t._v("#")]),t._v(" 3.2 WebSocket协议")]),t._v(" "),a("h2",{attrs:{id:"_3-3-http-2协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-http-2协议"}},[t._v("#")]),t._v(" 3.3 HTTP/2协议")]),t._v(" "),a("h2",{attrs:{id:"_3-4-tls-ssl协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-tls-ssl协议"}},[t._v("#")]),t._v(" 3.4 TLS/SSL协议")]),t._v(" "),a("h2",{attrs:{id:"_3-5-tcp协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-tcp协议"}},[t._v("#")]),t._v(" 3.5 TCP协议")]),t._v(" "),a("h2",{attrs:{id:"_3-5-ip协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-ip协议"}},[t._v("#")]),t._v(" 3.5 IP协议")]),t._v(" "),a("p",[t._v("::: tips\n抓包工具：wireshark\n:::")])])}),[],!1,null,null,null);e.default=o.exports}}]);